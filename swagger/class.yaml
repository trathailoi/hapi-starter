openapi: 3.0.0
info:
  description: |
    A more complex version of the race cars API.
  version: "1.0.0"
  title: Classes Management
  contact:
    email: loi.tra@9thwonder.com
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/loi.tra/my-first-API/1.0.0
  - description: Please run the app locally on port 8080
    url: 'http://localhost:8080/api'
tags:
  - name: class
    description: Classes of races and cars

paths:
  /classes:
    post:
      tags:
        - class
      summary: Add a new class to the system
      operationId: addClass
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClassFormData'
        description: form data object that contains fields to update a specific Class
        required: true
      responses:
        default:
          description: successful operation
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Class'
        '400':
          $ref: './common.yaml#/components/responses/400BadRequest'
    get:
      tags:
        - class
      summary: Finds Classes # with or w/o conditions
      description: Finds all the classes
      # Multiple status values can be provided with comma separated strings
      operationId: findClasses
      # parameters:
      #   # - name: keyword
      #   #   in: query
      #   #   description: The keyword to search for
      #   #   required: false
      #   #   schema:
      #   #     type: string
      #   - name: page
      #     in: query
      #     description: The page number
      #     required: false
      #     explode: true
      #     schema:
      #       type: integer
      #       minimum: 1
      #   - name: limit
      #     in: query
      #     description: >-
      #       For valid response try integer IDs with value >= 1 and <= 50.\ \ Other
      #       values will generated exceptions
      #     required: false
      #     explode: true
      #     schema:
      #       type: integer
      #       minimum: 1
      #       maximum: 50
      #     examples:
      #       val1:
      #         value: 1
      #         summary: A sample min value
      #       max:
      #         value: 50
      #         summary: A sample max value
      #   # - name: status
      #   #   in: query
      #   #   description: Status values that need to be considered for filter
      #   #   # required: true
      #   #   explode: true
      #   #   schema:
      #   #     type: array
      #   #     items:
      #   #       type: string
      #   #       enum:
      #   #         - all
      #   #         - active
      #   #         - inactive
      #   #         - archived
      #   #       default: all
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Class'
  '/classes/{classId}':
    get:
      tags:
        - class
      summary: Find class by ID
      description: Returns a single class
      operationId: getClassById
      parameters:
        - name: classId
          in: path
          description: ID of class to return
          required: true
          schema:
            $ref: './common.yaml#/components/schemas/uuidFormat'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Class'
        '404':
          $ref: './common.yaml#/components/responses/404NotFound'
        '400':
          $ref: './common.yaml#/components/responses/400BadRequest'
    patch:
      tags:
        - class
      summary: Updates an existing class by ID
      operationId: updateClass
      parameters:
        - name: classId
          in: path
          description: ID of the class that needs to be updated
          required: true
          schema:
            $ref: './common.yaml#/components/schemas/uuidFormat'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClassFormData'
        description: form data object that contains fields to update a specific Class
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Class'
        '404':
          $ref: './common.yaml#/components/responses/404NotFound'
        '400':
          $ref: './common.yaml#/components/responses/400BadRequest'
    delete:
      tags:
        - class
      summary: Deletes a class by ID
      # description: >-
      #   For valid response try integer IDs with positive integer value.\ \
      #   Negative or non-integer values will generate API errors
      operationId: deleteClass
      parameters:
        - name: classId
          in: path
          description: Class id to delete
          required: true
          schema:
            $ref: './common.yaml#/components/schemas/uuidFormat'
      responses:
        '200':
          $ref: './common.yaml#/components/responses/200Success'
        '404':
          $ref: './common.yaml#/components/responses/404NotFound'
        '400':
          $ref: './common.yaml#/components/responses/400BadRequest'

  # /store/inventory:
  #   get:
  #     tags:
  #       - store
  #     summary: Returns pet inventories by status
  #     description: Returns a map of status codes to quantities
  #     operationId: getInventory
  #     responses:
  #       '200':
  #         description: successful operation
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               additionalProperties:
  #                 type: integer
  #                 format: int32

components:
  schemas:
    ClassFormData: # Can be referenced as '#/components/schemas/ClassFormData'
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: GTE-Pro
    Class: # Can be referenced as '#/components/schemas/Class'
      allOf:
        - type: object
          properties:
            id:
              $ref: './common.yaml#/components/schemas/uuidFormat'
        - $ref: '#/components/schemas/ClassFormData'

